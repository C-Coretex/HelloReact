[{"C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\components\\NeuralNetwork.js":"1","C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\App.js":"2","C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\components\\NeuralNetworkFunctions.js":"3","C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\index.js":"4","C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\components\\Landing.js":"5","C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\components\\CreateNN.js":"6"},{"size":5431,"mtime":1611668664420,"results":"7","hashOfConfig":"8"},{"size":1683,"mtime":1611668723252,"results":"9","hashOfConfig":"8"},{"size":3197,"mtime":1606991910026,"results":"10","hashOfConfig":"8"},{"size":196,"mtime":1604250998972,"results":"11","hashOfConfig":"8"},{"size":1414,"mtime":1608391288124,"results":"12","hashOfConfig":"8"},{"size":4899,"mtime":1611669177227,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tgqrwv",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\components\\NeuralNetwork.js",["28"],"C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\App.js",["29","30"],"C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\components\\NeuralNetworkFunctions.js",["31"],"\r\n\r\n// #region API URLs\r\nconst urlStartNN = \"http://localhost:7071/api/StartNN\"\r\nconst urlStopNN = \"http://localhost:7071/api/StopNN\"\r\nconst urlContinueNN = \"http://localhost:7071/api/ContinueNN\"\r\nconst urlGetNNState = \"http://localhost:7071/api/GetNNState\"\r\nconst urlTestNN = \"http://localhost:7071/api/TestNN\"\r\nconst urlDeleteNN = \"http://localhost:7071/api/DeleteNN\"\r\n// #endregion\r\n\r\n\r\nexport async function startNN(NNStructObj) {\r\n\tconst { moment, learningRate, struct, terminatingError } = NNStructObj\r\n\r\n\tlet NNStruct = {\r\n\t\tMomentTemp: moment === \"\" ? 0 : moment,\r\n\t\tLearningRateTemp: learningRate === \"\" ? 0 : learningRate,\r\n\t\tNeuronsAndLayers: struct === \"\" ? \"\" : struct,\r\n\t\tTerminatingErrorProcents: terminatingError === \"\" ? 0 : terminatingError\r\n\t}\r\n\r\n\tconsole.log(NNStruct)\r\n\r\n\tconst requestOptions = {\r\n\t\tmethod: 'POST',\r\n\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\tbody: JSON.stringify(NNStruct)\r\n\t}\r\n\r\n\r\n\ttry {\r\n\t\tconst response = await fetch(urlStartNN, requestOptions)\r\n\t\tif (!response.ok) throw new Error('Problem in response with message: ' + response)\r\n\r\n\t\tconst data = await response.json();\r\n\t\treturn data\r\n\t}\r\n\tcatch (err) {\r\n\t\tthrow new Error('Exited with error: ' + err)\r\n\t}\r\n}\r\n\r\nexport async function stopNN(NNId) {\r\n\tconst requestOptions = {\r\n\t\tmethod: 'POST',\r\n\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\tbody: JSON.stringify(NNId)\r\n\t}\r\n\t\r\n\t\r\n\ttry {\r\n\t\tconst response = await fetch(urlStopNN, requestOptions)\r\n\t\tif (!response.ok) throw new Error('Problem in response with message: ' + response)\r\n\r\n\t\tconst data = response.json()\r\n\t\treturn data\r\n\t}\r\n\tcatch (err) {\r\n\t\tthrow new Error('Exited with error: ' + err)\r\n\t}\r\n}\r\n\r\nexport async function continueNN(NNId) {\r\n\tconst requestOptions = {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Accept': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(NNId)\r\n\t}\r\n\r\n\r\n\ttry {\r\n\t\tconst response = await fetch(urlContinueNN, requestOptions)\r\n\t\tif (!response.ok) throw new Error('Problem in response with message: ' + response)\r\n\r\n\t\tconst data = await response.json();\r\n\t\treturn data\r\n\t}\r\n\tcatch (err) {\r\n\t\tthrow new Error('Exited with error: ' + err)\r\n\t}\r\n}\r\n\r\nexport async function deleteNN(NNId) {\r\n\tconst requestOptions = {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Accept': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(NNId)\r\n\t}\r\n\r\n\r\n\ttry {\r\n\t\tconst response = await fetch(urlDeleteNN, requestOptions)\r\n\t\tif (!response.ok) throw new Error('Problem in response with message: ' + response)\r\n\r\n\t\tconst data = await response.json();\r\n\t\treturn data\r\n\t}\r\n\tcatch (err) {\r\n\t\tthrow new Error('Exited with error: ' + err)\r\n\t}\r\n}\r\n\r\nexport async function getNNState(NNId) {\r\n\tconst requestOptions = {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Accept': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(NNId)\r\n\t}\r\n\t\r\n\t\r\n\ttry {\r\n\t\tconst response = await fetch(urlGetNNState, requestOptions)\r\n\t\tif (!response.ok) throw new Error('Problem in response with message: ' + response)\r\n\t\t\r\n\t\tconst data = await response.json();\r\n\t\treturn data\r\n\t}\r\n\tcatch (err) {\r\n\t\tthrow new Error('Exited with error: ' + err)\r\n\t}\r\n}",["32","33"],"C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\index.js",[],"C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\components\\Landing.js",[],"C:\\Users\\valer\\Desktop\\GitSave\\HelloReact\\frontend\\src\\components\\CreateNN.js",["34","35","36","37"],{"ruleId":"38","severity":1,"message":"39","line":28,"column":9,"nodeType":"40","messageId":"41","endLine":28,"endColumn":16},{"ruleId":"42","severity":1,"message":"43","line":56,"column":5,"nodeType":"40","messageId":"44","endLine":56,"endColumn":13},{"ruleId":"38","severity":1,"message":"45","line":56,"column":5,"nodeType":"40","messageId":"41","endLine":56,"endColumn":13},{"ruleId":"38","severity":1,"message":"46","line":8,"column":7,"nodeType":"40","messageId":"41","endLine":8,"endColumn":16},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"38","severity":1,"message":"51","line":17,"column":8,"nodeType":"40","messageId":"41","endLine":17,"endColumn":14},{"ruleId":"38","severity":1,"message":"52","line":18,"column":8,"nodeType":"40","messageId":"41","endLine":18,"endColumn":20},{"ruleId":"38","severity":1,"message":"53","line":19,"column":8,"nodeType":"40","messageId":"41","endLine":19,"endColumn":14},{"ruleId":"38","severity":1,"message":"54","line":20,"column":8,"nodeType":"40","messageId":"41","endLine":20,"endColumn":24},"no-unused-vars","'NNstate' is assigned a value but never used.","Identifier","unusedVar","no-const-assign","'NNstruct' is constant.","const","'NNstruct' is assigned a value but never used.","'urlTestNN' is assigned a value but never used.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"'moment' is assigned a value but never used.","'learningRate' is assigned a value but never used.","'layers' is assigned a value but never used.","'terminatingError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]